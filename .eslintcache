[{"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\index.tsx":"1","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\App.tsx":"3","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\Play.tsx":"4","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\Home.tsx":"5","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\Intro.tsx":"6","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\MainMenu.tsx":"7","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\LandingMenu.tsx":"8","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\Game.tsx":"9","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\Loading.tsx":"10","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\PrivateGame.tsx":"11","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\StreetView.tsx":"12","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\ChatWindow.tsx":"13","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\ChatInput.tsx":"14","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\MessageBox.tsx":"15","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\api\\GameSocket.ts":"16","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\api\\HTTPRequests.ts":"17","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\RandomGame.tsx":"18","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\EndGameMenu.tsx":"19","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\User\\User.tsx":"20","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\User\\SignIn.tsx":"21","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Verify\\Verify.tsx":"22","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\game_settings.ts":"23","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\HowToPlay.tsx":"24","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\User\\SignedIn.tsx":"25","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\User\\Username.tsx":"26"},{"size":500,"mtime":1610837147249,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":813,"mtime":1611614029504,"results":"30","hashOfConfig":"28"},{"size":2865,"mtime":1611952414376,"results":"31","hashOfConfig":"28"},{"size":156,"mtime":1611870988193,"results":"32","hashOfConfig":"28"},{"size":1262,"mtime":1611950923403,"results":"33","hashOfConfig":"28"},{"size":2024,"mtime":1611349285824,"results":"34","hashOfConfig":"28"},{"size":1725,"mtime":1611948587548,"results":"35","hashOfConfig":"28"},{"size":7637,"mtime":1611952387994,"results":"36","hashOfConfig":"28"},{"size":2051,"mtime":1611606438142,"results":"37","hashOfConfig":"28"},{"size":2689,"mtime":1611348989709,"results":"38","hashOfConfig":"28"},{"size":1741,"mtime":1611695309430,"results":"39","hashOfConfig":"28"},{"size":3067,"mtime":1611952716524,"results":"40","hashOfConfig":"28"},{"size":2237,"mtime":1611605065526,"results":"41","hashOfConfig":"28"},{"size":4073,"mtime":1611793012792,"results":"42","hashOfConfig":"28"},{"size":3650,"mtime":1611952701562,"results":"43","hashOfConfig":"28"},{"size":2775,"mtime":1611950749681,"results":"44","hashOfConfig":"28"},{"size":2930,"mtime":1611776514411,"results":"45","hashOfConfig":"28"},{"size":3784,"mtime":1611952881119,"results":"46","hashOfConfig":"28"},{"size":1050,"mtime":1611951400686,"results":"47","hashOfConfig":"28"},{"size":4541,"mtime":1611688253778,"results":"48","hashOfConfig":"28"},{"size":5691,"mtime":1611950824473,"results":"49","hashOfConfig":"28"},{"size":137,"mtime":1611778122833,"results":"50","hashOfConfig":"28"},{"size":2011,"mtime":1611869677021,"results":"51","hashOfConfig":"28"},{"size":4539,"mtime":1611968124147,"results":"52","hashOfConfig":"28"},{"size":4120,"mtime":1611972437579,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"tp3sg3",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\index.tsx",[],["110","111"],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\App.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\Play.tsx",["112"],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\Home.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\Intro.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\MainMenu.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\LandingMenu.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\Game.tsx",["113","114"],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\Loading.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\PrivateGame.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\StreetView.tsx",["115","116"],"import React, {useRef, useState, useEffect} from 'react';\r\nimport { Loader } from \"@googlemaps/js-api-loader\";\r\n\r\ninterface StreetViewProps {\r\n    apiKey: string;\r\n    streetViewOptions: google.maps.StreetViewPanoramaOptions;\r\n    onPositionChanged: (position: google.maps.LatLngLiteral) => void;\r\n};\r\n\r\nfunction StreetView(props: StreetViewProps) {\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const loader = new Loader({\r\n        apiKey: props.apiKey,\r\n        version: \"weekly\"\r\n    })\r\n    const [streetView, setStreetView] = useState<google.maps.StreetViewPanorama>();\r\n\r\n    useEffect(() => {\r\n        createView(ref);\r\n        if (streetView) {\r\n            streetView!.addListener('position_changed', () => {\r\n                props.onPositionChanged(streetView!.getPosition().toJSON());\r\n            })\r\n            return () => {\r\n                google.maps.event.clearInstanceListeners(streetView!);\r\n            }\r\n        }\r\n    },[streetView])\r\n\r\n    // if streetView has been created, then upon position change, update streetView\r\n    useEffect(() => {\r\n        if (streetView) {\r\n            streetView.setPosition(props.streetViewOptions.position!);\r\n        }\r\n    }, [props.streetViewOptions.position])\r\n\r\n    const createView = (ref: React.RefObject<HTMLDivElement>) => {\r\n        if (!streetView) {\r\n            loader\r\n            .load()\r\n            .then(() => {\r\n                setStreetView(new google.maps.StreetViewPanorama(ref.current!, props.streetViewOptions));\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '100%', width: \"100%\" }} ref={ref}/>\r\n    );\r\n\r\n}\r\n\r\nexport default StreetView;","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\ChatWindow.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\ChatInput.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\MessageBox.tsx",["117"],"import React, { useEffect, useRef } from 'react';\r\nimport {\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ListChildComponentProps, VariableSizeList as MessageList } from 'react-window';\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        border: '2px solid rgba(0, 0, 0, 0.12)',\r\n        overflow: 'hidden',\r\n        padding: theme.spacing(2, 0, 0),\r\n        margin: theme.spacing(1, 1, 1),\r\n        height: \"100%\",\r\n    },\r\n    messageContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    messageContent: {\r\n        display: 'flex',\r\n        wordBreak: 'break-word',\r\n        flexDirection: 'column',\r\n        width: '65%',\r\n    }\r\n}));\r\n\r\nexport enum Sender {\r\n    Other='other',\r\n    Me='me'\r\n}\r\n\r\nfunction MessageRow({index, data, style}: ListChildComponentProps) {\r\n    const classes = useStyles();\r\n    const rowRef = useRef<HTMLDivElement>(null);\r\n    const message = data.messages[index];\r\n    \r\n    const showName = () => {\r\n        if (index === 0) return true; \r\n        const prevMessage = data.messages[index-1];\r\n        return (message.sender !== prevMessage.sender || message.user !== prevMessage.user)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (rowRef.current) {\r\n            data.setRowHeight(index, rowRef.current.clientHeight);\r\n        }\r\n        // eslint-disable-next-line\r\n        }, [rowRef]);\r\n\r\n    return (\r\n            <div style={style}>\r\n                <div ref={rowRef} \r\n                className={classes.messageContainer} \r\n                style={message.sender === Sender.Me ? {alignItems: \"end\"} : {alignItems: \"start\"}}\r\n                >\r\n                    <div \r\n                        className={classes.messageContent}\r\n                        style={message.sender === Sender.Me ? {alignItems: \"end\"} : {alignItems: \"start\"}}\r\n                    >\r\n                        {\r\n                            showName() &&\r\n                            <Typography variant='caption' color='textSecondary'> {message.name} </Typography>\r\n\r\n                        }\r\n                        <Typography variant='body1'> {message.messageText} </Typography>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport interface Message {\r\n    messageText: string;\r\n    name: string;\r\n    sender: Sender;\r\n}\r\n\r\ninterface MessageBoxProps {\r\n    messages: Message[];\r\n}\r\n\r\nfunction MessageBox(props: MessageBoxProps) {\r\n    const classes = useStyles();\r\n    // References\r\n    const listRef = useRef<MessageList>(null);\r\n    const rowHeights = useRef<{[index: number]: number}>({});\r\n\r\n    useEffect(() => {\r\n        if (props.messages.length > 0) {\r\n            if (listRef.current) {\r\n                scrollToBottom();\r\n            }\r\n        }\r\n    }, [props.messages]);\r\n\r\n    function setRowHeight(index: number, size: number) {\r\n        listRef.current!.resetAfterIndex(0);\r\n        rowHeights.current = { ...rowHeights.current, [index]: size };\r\n    }\r\n\r\n    function scrollToBottom() {\r\n        listRef.current!.scrollToItem(props.messages.length - 1, \"end\");\r\n    }\r\n\r\n    function getRowHeight(index: number) {\r\n        return rowHeights.current[index] + 8 || 82;\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <MessageList\r\n                    className=\"List\"\r\n                    height={height}\r\n                    itemCount={props.messages.length}\r\n                    itemSize={getRowHeight}\r\n                    ref={listRef}\r\n                    width={width}\r\n                    itemData={{messages: props.messages, setRowHeight}}\r\n                >\r\n                    {MessageRow}\r\n                </MessageList>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default MessageBox;\r\n\r\n","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\api\\GameSocket.ts",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\api\\HTTPRequests.ts",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\RandomGame.tsx",["118"],"import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n    initiateSocket,\r\n    disconnectSocket,\r\n    subscribeToMatchSuccess,\r\n    MatchSuccessData,\r\n} from '../../api/GameSocket';\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { getAnonymousToken } from '../../api/HTTPRequests';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { MainMenuState } from './MainMenu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    instructions: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    cancelButton: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    centered: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\ninterface RandomGameProps {\r\n    handleStateChange: (newState: MainMenuState) => void;\r\n}\r\n\r\n\r\nfunction RandomGame(props: RandomGameProps) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const handleCancel = () => {\r\n        disconnectSocket();\r\n        props.handleStateChange(MainMenuState.LandingMenu);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchGameID();\r\n    }, [])\r\n\r\n    const fetchGameID = () => {\r\n        // check if token exists, then make socket connection\r\n        const token = localStorage.getItem(process.env.REACT_APP_TOKEN_NAME!);\r\n        if (token) {\r\n            initiateSocket(token, undefined, afterSocketConnect);\r\n        } else {\r\n            getAnonymousToken()\r\n            .then( data => {\r\n                initiateSocket(data.token, undefined, afterSocketConnect);\r\n            })\r\n        }\r\n    }\r\n\r\n    const afterSocketConnect = () => {\r\n        console.log(\"Connected\")\r\n        subscribeToMatchSuccess(waitForMatch);\r\n    }\r\n\r\n    const waitForMatch = (matchSuccessData: MatchSuccessData) => {\r\n        const gameID = matchSuccessData.gameID;\r\n        disconnectSocket();\r\n        history.push(`/play/${gameID}`);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.instructions}>\r\n                <Typography variant='subtitle1' align='center' color='textSecondary'>\r\n                    Finding a match...\r\n                </Typography>\r\n            </div>\r\n            <div className={classes.instructions}>\r\n                    <CircularProgress />\r\n            </div>\r\n            <div className={classes.centered}>\r\n                <Button\r\n                className={classes.cancelButton} \r\n                color=\"secondary\"\r\n                onClick={e => handleCancel()}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RandomGame;","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\EndGameMenu.tsx",["119"],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\User\\User.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\User\\SignIn.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Verify\\Verify.tsx",["120"],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\game_settings.ts",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\HowToPlay.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\User\\SignedIn.tsx",["121","122"],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\User\\Username.tsx",["123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":54,"column":8,"nodeType":"130","endLine":54,"endColumn":10,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":17,"column":5,"nodeType":"134","messageId":"135","endLine":17,"endColumn":19},{"ruleId":"128","severity":1,"message":"136","line":139,"column":7,"nodeType":"130","endLine":139,"endColumn":9,"suggestions":"137"},{"ruleId":"128","severity":1,"message":"138","line":28,"column":7,"nodeType":"130","endLine":28,"endColumn":19,"suggestions":"139"},{"ruleId":"128","severity":1,"message":"140","line":35,"column":8,"nodeType":"130","endLine":35,"endColumn":42,"suggestions":"141"},{"ruleId":"128","severity":1,"message":"142","line":98,"column":8,"nodeType":"130","endLine":98,"endColumn":24,"suggestions":"143"},{"ruleId":"128","severity":1,"message":"144","line":54,"column":8,"nodeType":"130","endLine":54,"endColumn":10,"suggestions":"145"},{"ruleId":"128","severity":1,"message":"146","line":58,"column":8,"nodeType":"130","endLine":58,"endColumn":10,"suggestions":"147"},{"ruleId":"128","severity":1,"message":"148","line":97,"column":7,"nodeType":"130","endLine":97,"endColumn":9,"suggestions":"149"},{"ruleId":"132","severity":1,"message":"150","line":5,"column":5,"nodeType":"134","messageId":"135","endLine":5,"endColumn":15},{"ruleId":"132","severity":1,"message":"151","line":9,"column":8,"nodeType":"134","messageId":"135","endLine":9,"endColumn":16},{"ruleId":"132","severity":1,"message":"152","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":26},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'afterSocketConnect', 'gameID', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["155"],"@typescript-eslint/no-unused-vars","'GameUpdateData' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'handleGameStatus'. Either include it or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'createView' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["157"],"React Hook useEffect has a missing dependency: 'streetView'. Either include it or remove the dependency array.",["158"],"React Hook useEffect has a missing dependency: 'scrollToBottom'. Either include it or remove the dependency array.",["159"],"React Hook useEffect has a missing dependency: 'fetchGameID'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has a missing dependency: 'waitForGame'. Either include it or remove the dependency array.",["161"],"React Hook useEffect has missing dependencies: 'history' and 'query'. Either include them or remove the dependency array.",["162"],"'IconButton' is defined but never used.","'EditIcon' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [afterSocketConnect, gameID, history]",{"range":"179","text":"180"},"Update the dependencies array to be: [handleGameStatus]",{"range":"181","text":"182"},"Update the dependencies array to be: [createView, props, streetView]",{"range":"183","text":"184"},"Update the dependencies array to be: [props.streetViewOptions.position, streetView]",{"range":"185","text":"186"},"Update the dependencies array to be: [props.messages, scrollToBottom]",{"range":"187","text":"188"},"Update the dependencies array to be: [fetchGameID]",{"range":"189","text":"190"},"Update the dependencies array to be: [waitForGame]",{"range":"191","text":"192"},"Update the dependencies array to be: [history, query]",{"range":"193","text":"194"},[1790,1792],"[afterSocketConnect, gameID, history]",[3961,3963],"[handleGameStatus]",[951,963],"[createView, props, streetView]",[1193,1227],"[props.streetViewOptions.position, streetView]",[2972,2988],"[props.messages, scrollToBottom]",[1407,1409],"[fetchGameID]",[1366,1368],"[waitForGame]",[2790,2792],"[history, query]"]