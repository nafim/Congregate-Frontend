[{"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\index.tsx":"1","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\App.tsx":"3","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\Play.tsx":"4","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\Home.tsx":"5","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\Intro.tsx":"6","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\MainMenu.tsx":"7","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\LandingMenu.tsx":"8","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\Game.tsx":"9","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\Loading.tsx":"10","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\PrivateGame.tsx":"11","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\StreetView.tsx":"12","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\ChatWindow.tsx":"13","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\ChatInput.tsx":"14","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\MessageBox.tsx":"15","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\api\\GameSocket.ts":"16","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\api\\HTTPRequests.ts":"17","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\RandomGame.tsx":"18","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\EndGameMenu.tsx":"19","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\User\\User.tsx":"20","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\User\\SignIn.tsx":"21","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Verify\\Verify.tsx":"22","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\game_settings.ts":"23"},{"size":500,"mtime":1610837147249,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":813,"mtime":1611614029504,"results":"27","hashOfConfig":"25"},{"size":2514,"mtime":1611776868606,"results":"28","hashOfConfig":"25"},{"size":121,"mtime":1611267688561,"results":"29","hashOfConfig":"25"},{"size":1361,"mtime":1611267664966,"results":"30","hashOfConfig":"25"},{"size":2024,"mtime":1611349285824,"results":"31","hashOfConfig":"25"},{"size":1690,"mtime":1611610863963,"results":"32","hashOfConfig":"25"},{"size":7313,"mtime":1611792962988,"results":"33","hashOfConfig":"25"},{"size":2051,"mtime":1611606438142,"results":"34","hashOfConfig":"25"},{"size":2689,"mtime":1611348989709,"results":"35","hashOfConfig":"25"},{"size":1741,"mtime":1611695309430,"results":"36","hashOfConfig":"25"},{"size":3017,"mtime":1611793037508,"results":"37","hashOfConfig":"25"},{"size":2237,"mtime":1611605065526,"results":"38","hashOfConfig":"25"},{"size":4073,"mtime":1611793012792,"results":"39","hashOfConfig":"25"},{"size":3631,"mtime":1611775633294,"results":"40","hashOfConfig":"25"},{"size":1797,"mtime":1611688030670,"results":"41","hashOfConfig":"25"},{"size":2930,"mtime":1611776514411,"results":"42","hashOfConfig":"25"},{"size":2709,"mtime":1611792977075,"results":"43","hashOfConfig":"25"},{"size":1539,"mtime":1611687757212,"results":"44","hashOfConfig":"25"},{"size":4541,"mtime":1611688253778,"results":"45","hashOfConfig":"25"},{"size":4438,"mtime":1611620925163,"results":"46","hashOfConfig":"25"},{"size":137,"mtime":1611778122833,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"tp3sg3",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\index.tsx",[],["101","102"],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\App.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\Play.tsx",["103"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    initiateSocket,\r\n    sendPlayerReady,\r\n    subscribeToGameStatus,\r\n    GameStatusData,\r\n    GameStatus,\r\n    subscribeToInitialPosition,\r\n    GameUpdateData,\r\n    requestGameStatus,\r\n} from '../api/GameSocket';\r\nimport { getAnonymousToken } from '../api/HTTPRequests';\r\nimport {\r\n    useParams,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\nimport Game from './Game';\r\nimport Loading from './Loading';\r\n\r\ninterface PlayParams {\r\n    gameID: string;\r\n}\r\n\r\nfunction Play() {\r\n    const { gameID } = useParams<PlayParams>();\r\n\r\n    const history = useHistory();\r\n\r\n    // set the states\r\n    const [ready, setReady] = useState(false);\r\n    const [loadingMessage, setLoadingMessage] = useState(\"Waiting for other player...\");\r\n    const [initialPosition, setInitialPosition] = useState({lat: 42.345573, lng: -71.098326});\r\n\r\n    // logic for connecting to the game\r\n    useEffect(() => {\r\n        // if no gameID, then redirect home\r\n        if (!gameID) return history.push('/');\r\n        // get a token if one doesn't already exist, then connect to socket\r\n        const token = localStorage.getItem(process.env.REACT_APP_TOKEN_NAME!);\r\n        if (token) {\r\n            initiateSocket(token, gameID, afterSocketConnect);\r\n        } else {\r\n            getAnonymousToken()\r\n            .then( data => {\r\n                initiateSocket(data.token, gameID, afterSocketConnect);\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const afterSocketConnect = () => {\r\n        console.log(\"Connected\")\r\n        subscribeToInitialPosition(startingGame);\r\n        sendPlayerReady();\r\n        subscribeToGameStatus(waitForGame);\r\n        requestGameStatus();\r\n    }\r\n\r\n    const waitForGame = (data: GameStatusData) => {\r\n        if (data.status === GameStatus.InLobby) {\r\n            \r\n        } else {\r\n            setLoadingMessage(\"Starting...\");\r\n        }\r\n    }\r\n\r\n    const startingGame = (initialPositionData: GameUpdateData) => {\r\n        console.log(\"This is the new initial position\");\r\n        console.log(initialPositionData.pos);\r\n        setInitialPosition(initialPositionData.pos)\r\n        if (!ready) {\r\n            setReady(true);\r\n        }\r\n    }\r\n\r\n\r\n    if (ready) {\r\n        return (\r\n            <Game\r\n                position={initialPosition}\r\n            />\r\n        );\r\n    } else {\r\n        return (\r\n            <Loading\r\n                loadingMessage={loadingMessage}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Play;","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\Home.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\Intro.tsx",["104","105","106","107","108","109"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MainMenu from './GameMenus/MainMenu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heroContent: {\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    introButtons: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(0),\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    centered: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    introTitle: {\r\n        color: \"black\",\r\n        \"font-family\": \"Arial, cursive\",\r\n        \"font-size\": \"4.7rem\",\r\n        \"text-align\": \"center\",\r\n        marginBottom: theme.spacing(8)\r\n    }\r\n}));\r\n\r\nfunction Intro() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.heroContent}>\r\n            <div>\r\n                <Typography className={classes.introTitle}>Congregate</Typography>\r\n            </div>\r\n            <div className={classes.centered}>\r\n                <MainMenu />\r\n            </div>\r\n            <div className={classes.centered}>\r\n                    <Button className={classes.introButtons}>How to Play</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Intro;","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\MainMenu.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\LandingMenu.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\Game.tsx",["110","111"],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\Loading.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\PrivateGame.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\StreetView.tsx",["112","113"],"import React, {useRef, useState, useEffect} from 'react';\r\nimport { Loader } from \"@googlemaps/js-api-loader\";\r\n\r\ninterface StreetViewProps {\r\n    apiKey: string;\r\n    streetViewOptions: google.maps.StreetViewPanoramaOptions;\r\n    onPositionChanged: (position: google.maps.LatLngLiteral) => void;\r\n};\r\n\r\nfunction StreetView(props: StreetViewProps) {\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const loader = new Loader({\r\n        apiKey: props.apiKey,\r\n        version: \"weekly\"\r\n    })\r\n    const [streetView, setStreetView] = useState<google.maps.StreetViewPanorama>();\r\n\r\n    useEffect(() => {\r\n        createView(ref);\r\n        if (streetView) {\r\n            streetView!.addListener('position_changed', () => {\r\n                props.onPositionChanged(streetView!.getPosition().toJSON());\r\n            })\r\n            return () => {\r\n                google.maps.event.clearInstanceListeners(streetView!);\r\n            }\r\n        }\r\n    },[streetView])\r\n\r\n    // if streetView has been created, then upon position change, update streetView\r\n    useEffect(() => {\r\n        if (streetView) {\r\n            streetView.setPosition(props.streetViewOptions.position!);\r\n        }\r\n    }, [props.streetViewOptions.position])\r\n\r\n    const createView = (ref: React.RefObject<HTMLDivElement>) => {\r\n        if (!streetView) {\r\n            loader\r\n            .load()\r\n            .then(() => {\r\n                setStreetView(new google.maps.StreetViewPanorama(ref.current!, props.streetViewOptions));\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '100%', width: \"100%\" }} ref={ref}/>\r\n    );\r\n\r\n}\r\n\r\nexport default StreetView;","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\ChatWindow.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\ChatInput.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\MessageBox.tsx",["114"],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\api\\GameSocket.ts",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\api\\HTTPRequests.ts",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\RandomGame.tsx",["115"],"import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n    initiateSocket,\r\n    disconnectSocket,\r\n    subscribeToMatchSuccess,\r\n    MatchSuccessData,\r\n} from '../../api/GameSocket';\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { getAnonymousToken } from '../../api/HTTPRequests';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { MainMenuState } from './MainMenu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    instructions: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    cancelButton: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    centered: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\ninterface RandomGameProps {\r\n    handleStateChange: (newState: MainMenuState) => void;\r\n}\r\n\r\n\r\nfunction RandomGame(props: RandomGameProps) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const handleCancel = () => {\r\n        disconnectSocket();\r\n        props.handleStateChange(MainMenuState.LandingMenu);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchGameID();\r\n    }, [])\r\n\r\n    const fetchGameID = () => {\r\n        // check if token exists, then make socket connection\r\n        const token = localStorage.getItem(process.env.REACT_APP_TOKEN_NAME!);\r\n        if (token) {\r\n            initiateSocket(token, undefined, afterSocketConnect);\r\n        } else {\r\n            getAnonymousToken()\r\n            .then( data => {\r\n                initiateSocket(data.token, undefined, afterSocketConnect);\r\n            })\r\n        }\r\n    }\r\n\r\n    const afterSocketConnect = () => {\r\n        console.log(\"Connected\")\r\n        subscribeToMatchSuccess(waitForMatch);\r\n    }\r\n\r\n    const waitForMatch = (matchSuccessData: MatchSuccessData) => {\r\n        const gameID = matchSuccessData.gameID;\r\n        disconnectSocket();\r\n        history.push(`/play/${gameID}`);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.instructions}>\r\n                <Typography variant='subtitle1' align='center' color='textSecondary'>\r\n                    Finding a match...\r\n                </Typography>\r\n            </div>\r\n            <div className={classes.instructions}>\r\n                    <CircularProgress />\r\n            </div>\r\n            <div className={classes.centered}>\r\n                <Button\r\n                className={classes.cancelButton} \r\n                color=\"secondary\"\r\n                onClick={e => handleCancel()}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RandomGame;","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Play\\components\\EndGameMenu.tsx",["116"],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\User\\User.tsx",["117","118"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button, Typography,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { JWTPayload, Role } from '../../../api/HTTPRequests';\r\nimport SignIn from './SignIn';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    introButtons: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(0),\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    centered: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\n// interface UserProps {\r\n//     handleStateChange: (newState: MainMenuState) => void;\r\n// }\r\n\r\nfunction User() {\r\n    const classes = useStyles();\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [username, setUsername] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(process.env.REACT_APP_TOKEN_NAME!);\r\n        if (token) {\r\n            const decoded = jwt_decode<JWTPayload>(token);\r\n            if (decoded.role !== Role.Anonymous) {\r\n                setLoggedIn(true);\r\n                setUsername(decoded.name);\r\n            }\r\n        }\r\n    },[])\r\n\r\n    if (loggedIn) {\r\n        return (\r\n            <Typography>\r\n                Signed in as {username}\r\n            </Typography>\r\n        );\r\n    } else {\r\n        return (\r\n            <SignIn />\r\n        );\r\n    }\r\n}\r\n\r\nexport default User;","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Home\\GameMenus\\User\\SignIn.tsx",[],"C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\views\\Verify\\Verify.tsx",["119","120"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    IconButton,\r\n    InputAdornment,\r\n    OutlinedInput,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport ArrowForward from '@material-ui/icons/ArrowForward';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getUserToken } from '../api/HTTPRequests';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heroContent: {\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    menuContainer: {\r\n        border: '2px solid rgba(0, 0, 0, 0.12)',\r\n        padding: theme.spacing(2,2,0),\r\n        display: 'inline-flex',\r\n    },\r\n    introButtons: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(0),\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    centered: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    introTitle: {\r\n        color: \"black\",\r\n        \"font-family\": \"Arial, cursive\",\r\n        \"font-size\": \"4.7rem\",\r\n        \"text-align\": \"center\",\r\n        marginBottom: theme.spacing(8)\r\n    }\r\n}));\r\n\r\nfunction Intro() {\r\n    const classes = useStyles();\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [usernameError, setUsernameError] = useState(false);\r\n    const [usernameErrorText, setUsernameErrorText] = useState(\"\");\r\n\r\n    const handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setUsername(event.target.value);\r\n        setUsernameError(false);\r\n        setUsernameErrorText(\"\");\r\n    }\r\n\r\n    const isValidUsername = () => {\r\n        if (!username) {\r\n            setUsernameError(true);\r\n            setUsernameErrorText(\"Please enter a valid Username\")\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const handleEnterUsername = () => {\r\n        if (isValidUsername()) {\r\n            getUserToken(username, query.get(\"key\")!);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // if theres no query key, then \r\n        if (!query.get(\"key\")) {\r\n            history.push('/');\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div className={classes.heroContent}>\r\n            <div>\r\n                <Typography className={classes.introTitle}>Congregate</Typography>\r\n            </div>\r\n            <div className={classes.centered}>\r\n                <div className={classes.menuContainer}>\r\n                    <div>\r\n                        <Typography variant='subtitle1' align='center' color='textSecondary'>\r\n                            Enter your username:\r\n                        </Typography>\r\n                        <form noValidate autoComplete=\"off\" onSubmit={(e) => {\r\n                            e.preventDefault();\r\n                            handleEnterUsername();\r\n                        }}>\r\n                            <FormControl error={usernameError}>\r\n                                <OutlinedInput\r\n                                    id=\"gameID\"\r\n                                    type='text'\r\n                                    placeholder='Username'\r\n                                    value={username}\r\n                                    onChange={handleUsernameChange}\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                            aria-label=\"submit login info\"\r\n                                            edge=\"end\"\r\n                                            onClick={handleEnterUsername}\r\n                                            >\r\n                                                <ArrowForward />\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                                <FormHelperText id=\"username-error-text\">{usernameErrorText}</FormHelperText>\r\n                            </FormControl>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Intro;","C:\\Users\\Nafim\\Desktop\\repos\\congregate-frontend\\src\\game_settings.ts",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":48,"column":8,"nodeType":"127","endLine":48,"endColumn":10,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"133","line":1,"column":27,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"134","line":4,"column":5,"nodeType":"131","messageId":"132","endLine":4,"endColumn":16},{"ruleId":"129","severity":1,"message":"135","line":5,"column":5,"nodeType":"131","messageId":"132","endLine":5,"endColumn":19},{"ruleId":"129","severity":1,"message":"136","line":6,"column":5,"nodeType":"131","messageId":"132","endLine":6,"endColumn":15},{"ruleId":"129","severity":1,"message":"137","line":7,"column":5,"nodeType":"131","messageId":"132","endLine":7,"endColumn":18},{"ruleId":"129","severity":1,"message":"138","line":17,"column":5,"nodeType":"131","messageId":"132","endLine":17,"endColumn":19},{"ruleId":"125","severity":1,"message":"139","line":129,"column":7,"nodeType":"127","endLine":129,"endColumn":9,"suggestions":"140"},{"ruleId":"125","severity":1,"message":"141","line":28,"column":7,"nodeType":"127","endLine":28,"endColumn":19,"suggestions":"142"},{"ruleId":"125","severity":1,"message":"143","line":35,"column":8,"nodeType":"127","endLine":35,"endColumn":42,"suggestions":"144"},{"ruleId":"125","severity":1,"message":"145","line":98,"column":8,"nodeType":"127","endLine":98,"endColumn":24,"suggestions":"146"},{"ruleId":"125","severity":1,"message":"147","line":54,"column":8,"nodeType":"127","endLine":54,"endColumn":10,"suggestions":"148"},{"ruleId":"125","severity":1,"message":"149","line":60,"column":8,"nodeType":"127","endLine":60,"endColumn":10,"suggestions":"150"},{"ruleId":"129","severity":1,"message":"151","line":3,"column":5,"nodeType":"131","messageId":"132","endLine":3,"endColumn":11},{"ruleId":"129","severity":1,"message":"152","line":31,"column":11,"nodeType":"131","messageId":"132","endLine":31,"endColumn":18},{"ruleId":"129","severity":1,"message":"151","line":3,"column":5,"nodeType":"131","messageId":"132","endLine":3,"endColumn":11},{"ruleId":"125","severity":1,"message":"153","line":81,"column":7,"nodeType":"127","endLine":81,"endColumn":9,"suggestions":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'afterSocketConnect', 'gameID', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["157"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'FormControl' is defined but never used.","'FormHelperText' is defined but never used.","'InputLabel' is defined but never used.","'OutlinedInput' is defined but never used.","'GameUpdateData' is defined but never used.","React Hook useEffect has a missing dependency: 'handleGameStatus'. Either include it or remove the dependency array.",["158"],"React Hook useEffect has missing dependencies: 'createView' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["159"],"React Hook useEffect has a missing dependency: 'streetView'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has a missing dependency: 'scrollToBottom'. Either include it or remove the dependency array.",["161"],"React Hook useEffect has a missing dependency: 'fetchGameID'. Either include it or remove the dependency array.",["162"],"React Hook useEffect has a missing dependency: 'waitForGame'. Either include it or remove the dependency array.",["163"],"'Button' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'query'. Either include them or remove the dependency array.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [afterSocketConnect, gameID, history]",{"range":"181","text":"182"},"Update the dependencies array to be: [handleGameStatus]",{"range":"183","text":"184"},"Update the dependencies array to be: [createView, props, streetView]",{"range":"185","text":"186"},"Update the dependencies array to be: [props.streetViewOptions.position, streetView]",{"range":"187","text":"188"},"Update the dependencies array to be: [props.messages, scrollToBottom]",{"range":"189","text":"190"},"Update the dependencies array to be: [fetchGameID]",{"range":"191","text":"192"},"Update the dependencies array to be: [waitForGame]",{"range":"193","text":"194"},"Update the dependencies array to be: [history, query]",{"range":"195","text":"196"},[1476,1478],"[afterSocketConnect, gameID, history]",[3684,3686],"[handleGameStatus]",[951,963],"[createView, props, streetView]",[1193,1227],"[props.streetViewOptions.position, streetView]",[2972,2988],"[props.messages, scrollToBottom]",[1407,1409],"[fetchGameID]",[1372,1374],"[waitForGame]",[2322,2324],"[history, query]"]